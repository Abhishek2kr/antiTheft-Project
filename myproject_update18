#include <SoftwareSerial.h>
#include <TinyGPS++.h>

#define PINNUMBER ""
#define DEBUG true
//String phone_no = "+YYXXXXXXXXX"; // +country_codePhonenumber like:+919999999999
String owner_num = "+919430214629";
String owner_sms = "";
int test_count = 1;
String parked_latitude = "";
String parked_longitude = "";
String new_latitude = "";
String new_longitude = "";
String vehicle_status = "";
String response_sms = "";
String textMessage = "";

// initialize the library instance
TinyGPSPlus gps;
static const int RXPin = 2, TXPin = 3;
static const uint32_t GPSBaud = 9600;

// The serial connection to the GPS device
SoftwareSerial mySerial(RXPin, TXPin);

// Function to check the gsm status 

void send_location_by_sms(){
  String txtMsg = response_sms; //msg return by gps
  Serial.println("SENDING");
  Serial.println();
  Serial.println("Message:");
  Serial.println(txtMsg);
  delay(2000);
  // Send SMS command
  //sendData("AT+CMGS=\"+919962534005\"\r",1000,DEBUG);
  //Serial.print(phone_no);
  sendData("AT+CMGS="+owner_num,1000,DEBUG);
  delay(1000);
  // Sending the text message
  mySerial.println(txtMsg);
  delay(100);
  // clicking on enter key 
  mySerial.println((char)26);
  delay(1000);
  Serial.print("Message Send!");
   
}

 
void gpsInit(){
Serial.println("After 3s, test begin!!");
  delay(3000);
  sendData("AT+GPS=? ", 1000, DEBUG);
  sendData("AT+AGPS=? ",1000,DEBUG); 
  sendData("AT+GPSRD=?",1000,DEBUG);
  delay(1000);
   sendData("AT+GPSRD=0",1000,DEBUG);
  sendData("AT+GPS=1 ", 1000, DEBUG);
  sendData("AT+GPSRD=1",1000,DEBUG); 
   for(int i=0;i<10;i++){
    Serial.println("Testing GPS Output");
                                                          /*$GPGGA,104534.000,7791.0381,N,06727.4434,E,1,08,0.9,510.4,M,43.9,M,,*47
                                                          $GPGGA,HHMMSS.SSS,latitude,N,longitude,E,FQ,NOS,HDP,altitude,M,height,M,,checksum data*/
    delay(2000);
    
     Serial.println("mySerial.available() > 0 is " + mySerial.available() > 0);
     delay(1000);
     
     if (mySerial.available() > 0) {
        Serial.println("GPS Working...") ;
         //break; 
      }
   delay(2000);
}

 
} 
void gsmInit(){
   //SMS text mode closed
   sendData("AT+CMGF=0",1000,DEBUG);
   delay(1000);
   //SMS text mode checking
   sendData("AT+CMGR=?",1000,DEBUG);
   delay(1000);
   //SMS text mode opening
   sendData("AT+CMGF=1",1000,DEBUG);
}//End of get_owner_sms method  

/*void get_owner_sms(){
 
  // If there are any SMSs available()
  if(mySerial.available()>0){
    owner_sms = mySerial.readString();
    vehicle_status = owner_sms;
    Serial.print(vehicle_status);
    delay(1000);
    display_location();
    delay(1000); // When Owner will send any msg vehicle location will updated
    parked_latitude = new_latitude;
    parked_longitude = new_longitude;  
    delay(1000);
  } 
}*/

  
boolean set_vehicle_moving_status(){
 int count = 0;
 boolean vehicle_mov_status = true;
 for(int i = 1; i <= 5; i++){
  if((new_latitude.toInt() != parked_latitude.toInt()) || (new_longitude.toInt() != parked_longitude.toInt())){
      count++; 
   }
 }
 if(count >= 3){  // Here cheking the longitude and latitude atleast 3 times to confirm the moving status
      return vehicle_mov_status;  
  }
 else{
      vehicle_mov_status = false;
      return vehicle_mov_status;
  } 
}

void setup()
{
  Serial.begin(GPSBaud);
  mySerial.begin(GPSBaud);
  Serial.println(F("Anti-Theft Device Project"));
  Serial.print(F(" by Abhishek Kumar"));
  delay(1000); 
  baudrate();

  
  gsmInit();
  Serial.print("gsminit done!");
  gpsInit();

}

void loop()
{ 
  
 /* while (mySerial.available() > 0) {
    //Serial.println("Reading soft serial data...");
    if (gps.encode(mySerial.read()))
     display_location();
     
  }
  
  */
  Serial.println("In loop");
  if(set_vehicle_moving_status()){
          if(vehicle_status.equalsIgnoreCase("parked")){
              response_sms = "Warning Vehicle Location Changing! Take Action";
              send_location_by_sms();
               display_location();
               send_location_by_sms();
              //code for buzzer on
          }
    }         
 
  if(mySerial.available()>0){
    textMessage = mySerial.readString();
    Serial.print(textMessage);    
    delay(10);
  } 
  if(textMessage.indexOf("track")>=0){
    // Turn on relay and save current state
    Serial.println("tracking the vehicle!!");  
    textMessage = ""; 
    display_location();
    delay(1000);
    send_location_by_sms();
  }
  if(textMessage.indexOf("moving")>=0){
    // Turn off relay and save current state
    Serial.println("Owner is driving");
    textMessage = ""; 
    parked_latitude = new_latitude;
    parked_longitude = new_longitude; 
  }
  if(textMessage.indexOf("parked")>=0){
    
    Serial.println("Vehicle Parked");
    textMessage = "";
}

}

void display_location(){
  int i;
  for(int i=0;i<10;i++){
   if (mySerial.available() > 0){
       if (gps.encode(mySerial.read())){
           //Serial.print(F("Location: ")); 
           if (gps.location.isValid()){
                //Serial.print(gps.location.lat());
                //Serial.print(F(","));
                // Serial.print(gps.location.lng(), 6);
                new_latitude = (gps.location.lat());
                new_longitude =(gps.location.lng());
                response_sms = "Latitude: " + new_latitude;
                //Serial.println(response_sms);
                response_sms = response_sms + " Longitude: " + new_longitude; 
                //Serial.println(response_sms);
            
           }
           else{
                Serial.print(F("INVALID"));
                response_sms = "Default Location";
           }

           // Serial.print(F("  Date/Time: "));
       
           if (gps.date.isValid()){
               //Serial.print(gps.date.month());
               //Serial.print(F("/"));
               //Serial.print(gps.date.day());
               //Serial.print(F("/"));
               //Serial.print(gps.date.year());
               response_sms = response_sms +" Date: " +gps.date.month() +"/"+ gps.date.day()+"/"+gps.date.year();
               // Serial.println(response_sms);
           }
           else{
               Serial.print(F("INVALID"));
               response_sms = response_sms +" Date: Invalid";
           }

           Serial.print(F(" "));
           if (gps.time.isValid()){
                /* if (gps.time.hour() < 10) Serial.print(F("0"));
                Serial.print(gps.time.hour());
                Serial.print(F(":"));
                if (gps.time.minute() < 10) Serial.print(F("0"));
                Serial.print(gps.time.minute());
                Serial.print(F(":"));
                if (gps.time.second() < 10) Serial.print(F("0"));
                Serial.print(gps.time.second());
                Serial.print(F("."));
                if (gps.time.centisecond() < 10) Serial.print(F("0"));
                Serial.print(gps.time.centisecond());
                */
                response_sms = response_sms + " Time: "+gps.time.hour()+":"+gps.time.minute()+":"+gps.time.second();
                //Serial.println(response_sms);
           }
           else{
               Serial.print(F("INVALID"));
               response_sms = response_sms + "Time: INVALID";
           }
           Serial.println(response_sms);
           Serial.println();
       }
    }
  }
  // In case of GPS not working
  if(i == 10 || !(mySerial.available() > 0)){
     response_sms = "Unable to get location";  
  }
 }//End of display location method


 String sendData(String command, const int timeout, boolean debug)
{
    String response = "";    
    mySerial.println(command); 
    long int time = millis();   
    
    while( (time+timeout) > millis())
    {
      while(mySerial.available())
      {       
        char c = mySerial.read(); 
        response+=c;
      }  
    }    
    if(debug)
    {
      Serial.println(response);
    }    
    return response;
}

void baudrate()
{     
      //Serial.println("In baudrate method");
      int i=0;
      for(i=0;i<10;i++)
      {
           String msg = String("");
           msg=sendData("AT",1000,DEBUG);
           if( msg.indexOf("ok") >= 0 ){
              return;
           }
      }
}
