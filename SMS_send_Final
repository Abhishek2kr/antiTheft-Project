#include <SoftwareSerial.h>
//#include <GSM.h>
//GSM gsmAccess;     // include a 'true' parameter to enable debugging
//GSMScanner scannerNetworks;
//GSMModem modemTest;

const int pon = 5;
const int poff = 6;
const int lowp = 9;


const int rxPin = 2;
const int txPin = 3;

SoftwareSerial mySerial(rxPin, txPin);

#define DEBUG true
String textMessage,lampState;
 
void setup()
{
  Serial.begin(9600);
  mySerial.begin(9600);
  delay(1000);
  
  pinMode(pon, OUTPUT);
  pinMode(poff, OUTPUT);
  pinMode(lowp, OUTPUT);
  digitalWrite(poff, LOW);
  digitalWrite(lowp, HIGH);   
  digitalWrite(pon, HIGH);
  delay(3000); 
  digitalWrite(pon, LOW);
  delay(1000); 
  baudrate();
  Serial.println("After 3s, test begin!!");
  delay(3000);
 
  Serial.println("AT+CMGF=1");
  sendData("AT+CMGF=0",1000,DEBUG);
  delay(1000);
  sendData("AT+CMGR=?",1000,DEBUG);
  delay(1000);
  sendData("AT+CMGF=1",1000,DEBUG);
  mySerial.print("AT+CNMI=2,2,0,0,0\r");  


}

void loop()
{
   if(mySerial.available()>0){
    textMessage = mySerial.readString();
    Serial.print(textMessage);    
    delay(10);
  } 
  if(textMessage.indexOf("track")>=0){
    // Turn on relay and save current state
    Serial.println("tracking the vehicle!!");  
    textMessage = "";   
  }
  if(textMessage.indexOf("moving")>=0){
    // Turn off relay and save current state
    Serial.println("Owner is driving");
    textMessage = ""; 
  }
  if(textMessage.indexOf("parked")>=0){
  
    Serial.println("Vehicle Parked");
    textMessage = "";
  } 
}
void baudrate()
{
      int i=0;
      for(i=0;i<10;i++)
      {
           String msg = String("");
           msg=sendData("AT",1000,DEBUG);
           if( msg.indexOf("ok") >= 0 ){
              return;
           }
      }
}

String sendData(String command, const int timeout, boolean debug)
{
    String response = "";    
    mySerial.println(command); 
    long int time = millis();   
    
    while( (time+timeout) > millis())
    {
      while(mySerial.available())
      {       
        char c = mySerial.read(); 
        response+=c;
      }  
    }    
    if(debug)
    {
      Serial.println(response);
    }    
    return response;
}
